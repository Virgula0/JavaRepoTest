<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example.progetto.angelo.rosa</groupId>
	<artifactId>test</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>test</name>
	<url>http://maven.apache.org</url>

	<properties>
		<!-- Java version -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>

		<!-- Deps versions -->
		<junit.version>4.13.2</junit.version>
		<assertjswing.version>3.17.1</assertjswing.version>
		<mockito.version>5.12.0</mockito.version>
		<jacoco.version>0.8.14</jacoco.version>
		<maven.surefire.report-version>3.5.2</maven.surefire.report-version> <!--
		junit tests, this is just for the report, surefire is enabled in maven
		by default differently from failsafe-->
		<maven.failsafe.version>3.5.2</maven.failsafe.version> <!-- failsafe:
		integration tests -->
		<picocli.version>4.7.6</picocli.version>
		<log4j.version>2.24.3</log4j.version>
		<maven.site.version>3.9.1</maven.site.version>
		<coveralls.version>4.3.0</coveralls.version>
		<mongodb.version>3.12.7</mongodb.version>
		<pit.version>1.21.0</pit.version>
		<maven.compiler.version>3.11.0</maven.compiler.version>
		<qos.logback.version>1.2.13</qos.logback.version>
		<build.helper.maven.version>3.6.0</build.helper.maven.version> <!--
		useful for different source folders for integration tests and e2e tests -->
		<testcontainers.version>1.20.4</testcontainers.version>
		<sonarcube.version>5.1.0.4751</sonarcube.version>
		<guice.version>7.0.0</guice.version> <!-- 4.2.3 gives problems when
		injecting fields and methods using java17 -->

		<!-- Project vars -->
		<main.class>com.example.progetto.angelo.rosa.main.Main</main.class> <!--
		do not append .java extension -->

		<!-- Jacoco exclusions -->
		<jacoco.exclusions>
			com/example/progetto/angelo/rosa/main/*,com/example/progetto/angelo/rosa/model/*
		</jacoco.exclusions>

		<!-- ENV VARS -->
		<mongo.image>mongo</mongo.image>
		<mongo.version>4.4.3</mongo.version>
		<mongo.port>27017</mongo.port>
		<mongo.dbname>testdb</mongo.dbname>

		<!-- sonar exclusions -->
		<sonar.issue.ignore.multicriteria>e11, e12, e13, e14</sonar.issue.ignore.multicriteria>

		<!-- Naming convention (Swing autogenerated code)-->
		<sonar.issue.ignore.multicriteria.e11.ruleKey>
			java:S116
		</sonar.issue.ignore.multicriteria.e11.ruleKey>
		<sonar.issue.ignore.multicriteria.e11.resourceKey>
			**/*View.java
		</sonar.issue.ignore.multicriteria.e11.resourceKey>

		<!-- Naming convention (Swing autogenerated code)-->
		<sonar.issue.ignore.multicriteria.e12.ruleKey>
			java:S117
		</sonar.issue.ignore.multicriteria.e12.ruleKey>
		<sonar.issue.ignore.multicriteria.e12.resourceKey>
			**/*View.java
		</sonar.issue.ignore.multicriteria.e12.resourceKey>

		<!-- At least one assertion (Integration Test and UI) -->
		<sonar.issue.ignore.multicriteria.e13.ruleKey>
			java:S2699
		</sonar.issue.ignore.multicriteria.e13.ruleKey>
		<sonar.issue.ignore.multicriteria.e13.resourceKey>
			**/*IT*.java,**/*E2E*.java,**/*View*.java
		</sonar.issue.ignore.multicriteria.e13.resourceKey>

		<!-- Inheritance tree of classes should not be too 5 deep (UI nesting) -->
		<sonar.issue.ignore.multicriteria.e14.ruleKey>
			java:S110
		</sonar.issue.ignore.multicriteria.e14.ruleKey>
		<sonar.issue.ignore.multicriteria.e14.resourceKey>
			**/*View.java
		</sonar.issue.ignore.multicriteria.e14.resourceKey>

		<!-- sonar automatically excludes tests -->
		<sonar.coverage.exclusions>
			**/model/*.*,
			**/main/*.*,
		</sonar.coverage.exclusions>

		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports,
			${project.build.directory}/failsafe-reports
		</sonar.junit.reportPaths>
	</properties>

	<profiles>
		<profile>
			<id>jacoco</id>
			<activation>
				<property>
					<name>skipCoverage</name>
					<value>!true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>integration-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>skip-tests</id>
			<properties>
				<skipTests>true</skipTests>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertjswing.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongodb.version}</version>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>${guice.version}</version>
		</dependency>
		<dependency>
			<!-- required to see Mongo Java Driver logs -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${qos.logback.version}</version>
		</dependency>
	</dependencies>

	<build>
		<!-- Plugin management section does not activate them, I don't want to
		run coveralls everytime, only CI/CD -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonarcube.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven.failsafe.version}</version>
					<configuration>
						<systemPropertyVariables>
							<mongo.image>${mongo.image}</mongo.image>
							<mongo.version>${mongo.version}</mongo.version>
							<mongo.port>${mongo.port}</mongo.port>
							<mongo.dbname>${mongo.dbname}</mongo.dbname>
						</systemPropertyVariables>
					</configuration>
					<executions>
						<execution>
							<id>default-it</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
						<execution>
							<id>e2e-tests</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<excludes>
									<exclude>**/*IT*.java</exclude>
								</excludes>
								<includes>
									<include>**/*E2E.java</include>
								</includes>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
								<goal>report</goal>
							</goals>
							<configuration>
								<excludes>
									<exclude>${jacoco.exclusions}</exclude>
								</excludes>
							</configuration>
						</execution>
						<execution>
							<id>jacoco-check</id>
							<phase>test</phase> <!-- bind to test phase otherwise
							integration tests influences the coverage -->
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<excludes>
									<exclude>${jacoco.exclusions}</exclude>
								</excludes>
								<rules>
									<rule>
										<element>PACKAGE</element>
										<limits>
											<limit>
												<counter>LINE</counter>
												<value>COVEREDRATIO</value>
												<minimum>1</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls.version}</version>
					<dependencies>
						<dependency>
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>2.3.1</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pit.version}</version>
					<configuration>
						<targetClasses>
							<param>com.example.progetto.angelo.rosa.controller.*</param>
							<param>com.example.progetto.angelo.rosa.repository.*</param>
						</targetClasses>
						<targetTests>
							<param>com.example.progetto.angelo.rosa.controller.*</param>
							<param>com.example.progetto.angelo.rosa.repository.*</param>
						</targetTests>
						<mutators>
							<mutator>DEFAULTS</mutator>
						</mutators>
						<mutationThreshold>80</mutationThreshold>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build.helper.maven.version}</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Fat jar with db drivers -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<archive>
								<manifest>
									<mainClass>${main.class}</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.report-version}</version>
				<configuration>
					<linkXRef>false</linkXRef>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven.site.version}</version>
			</plugin>
		</plugins>
	</build>
</project>
